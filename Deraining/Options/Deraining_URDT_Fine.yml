# general settings
name: Deraining_URDT_Fine
model_type: ImageCleanModel
scale: 1
num_gpu: 2   # set num_gpu: 0 for cpu mode
manual_seed: 100

# dataset and data loader settings
datasets:
  train:
    name: TrainSet
    type: Dataset_PairedImage
    dataroot_gt: ./Deraining/Datasets/train/target
    dataroot_lq: ./Deraining/Datasets/train/input
    geometric_augs: true

    filename_tmpl: '{}'
    io_backend:
      type: disk

    # data loader
    use_shuffle: true
    num_worker_per_gpu: 8
    batch_size_per_gpu: 96

    ### -------------Progressive training--------------------------
    mini_batch_sizes: [96,24,6]  # Batch size per gpu
    iters: [5000]
    gt_size: 128   # Max patch size for progressive training
    gt_sizes: [32,64,128]  # Patch sizes for progressive training. [32,64,128]
    patch_n: 1
    nums: [6]
    ### ------------------------------------------------------------

    dataset_enlarge_ratio: 1
    prefetch_mode: cuda # ~
    pin_memory: true

  val:
    name: ValSet
    type: Dataset_PairedImage
    dataroot_gt: ./Deraining/Datasets/val/gt
    dataroot_lq: ./Deraining/Datasets/val/input
    io_backend:
      type: disk

    ######train
    gt_size: 128
    patch_n: 1

###########patch_test
#  test:
#    r_steps: [64,48,32]
#    manual_batching_sizes: [5120,2560,1280]
#    test_num: 3

# network structures
network_g:
  type: DT
  inp_channels: 6
  out_channels: 3
  dim: 48
  num_blocks: [4,6,6,8]
  heads: [1,2,4,8]
  ffn_factor: 4.0
  bias: False
  LayerNorm_type: WithBias
  dual_pixel_task: False

# path
path:

  pretrain_network_g: ./Deraining/pretrained_models/net_g_derain_coarse.pth
  strict_load_g: true
  param_key_g: params_ema
  resume_state: ~

# training settings
train:
  ema_decay: 0.999
  total_iter: 90000
  warmup_iter: -1   # no warm up
  use_grad_clip: False


  scheduler:
    type: CosineAnnealingRestartCyclicLR
    periods: [10000, 80000]
    restart_weights: [1,1]
    eta_mins: [0.00001, 0.0000001]

  mixing_augs:
    mixup: false
    mixup_beta: 1.2
    use_identity: true

  optim_g:
    type: AdamW
    lr: 0.00001
    weight_decay: !!float 1e-4
    betas: [0.9, 0.999]

  # losses
  pixel_opt1:
      type: MS_SSIM

  pixel_opt2:
    type: L1Loss
    loss_weight: 0.16
    reduction: mean

# validation settings
val:
  val_freq: 1000
  save_img: true
  rgb2bgr: true
  use_image: true


  metrics:
    psnr: # metric name, can be arbitrary
      type: calculate_psnr
      crop_border: 0
      test_y_channel: true

# logging settings
logger:
  print_freq: 1000
  save_checkpoint_freq: 1000
  use_tb_logger: true
  wandb:
    project: ~
    resume_id: ~

# dist training settings
dist_params:
  backend: nccl
  port: 29500

diffusion:
    beta_schedule: linear
    beta_start: 0.0001
    beta_end: 0.02
    num_diffusion_timesteps: 1000
    sampling_timesteps: 3